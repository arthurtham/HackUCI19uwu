<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display = false;
leaderboard_table = ds_list_create();
st = 0
hackuwu = 0
ready = false
r_str = "&lt;null&gt;"
result = ""
result_def = "(Loading definition...)"
result_word = "word"
result_pos = ""
switch (irandom_range(0,7)) {
    case 0: result_word = "hack"; break;
    case 1: result_word = "library"; break;
    case 2: result_word = "programming"; break;
    case 3: result_word = "competition"; break;
    case 4: result_word = "painting"; break;
    case 5: result_word = "anteater"; break;
    case 6: result_word = "intern"; break;
    case 7: result_word = "job"; break;
    default: result_world = "hello"; break;
}
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(leaderboard_table);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ready = false
headers = ds_map_create()
ds_map_add(headers,"Content-Type","application/json")

json = '
{
"parameters" : {
"query" : "'+result_word+'"
}
}
';

//show_message(json)
//post = http_post_string(transposit_api,json)
post = http_request(transposit_api_dict,"POST",headers,json)
ds_map_destroy(headers)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>r_str = "null";
if ds_map_find_value(async_load, "id") == post {
   if ds_map_find_value(async_load, "status") == 0 {
        
      r_str = ds_map_find_value(async_load, "result");
      //show_message(r_str)
      result = json_decode(r_str);
      result_def = ""
      if result[? "status"] != "SUCCESS" {
        r_str = "null"
        } else {
        var result2 = result[? "result"]
        result2 = result2[? "results"]
        result2 = result2[| 0]
        result_pos = result2[? "partOfSpeech"]
        result2 = result2[? "definitions"]
        result_def = result2[| 0]
        //result_def = result_def[
        //show_message(result_def)
        }
      ds_map_destroy(result)
      //show_message(r_str)
      }
   else {
      r_str = "null";
    }
}

if r_str == "null"  {
    r_str = "An error occured trying to access the Transposit API from the cloud."
    show_message(r_str);
} else {
    ready = true
    display = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if display {
    draw_set_alpha(1)
    draw_text_custom(x,y,result_word+" ("+result_pos+")"+"#"
    ,fnt_default,c_white,fa_left,fa_top,true,1,1,0)
    draw_set_color(c_white)
    draw_set_halign(fa_left)
    draw_text_ext_transformed(x,y+60,result_def,48,room_width*(1/0.9),0.7,0.7,0)
}

///draw_text_center(x,y,text,font,color,h_center,v_center,shadow,scalex,scaley,angle
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
